<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:include filename="$(find ur_description)/urdf/ur_macro.xacro"/>

  <!-- The list of all available options can be found in the <ur_description>/ur_macro.xacro file -->
  <!-- Descriptions of the arguments can be found in the <ur_robot_driver>/src/hardware_interface.cpp file -->

  <xacro:macro name="ur_definition" params="name parent prefix mock_hardware">
    <!-- parameters -->
    <xacro:arg name="tf_prefix" default="${prefix}"/>
    <xacro:arg name="joint_limit_params" default="$(find aegis_description)/config/ur5e/joint_limits.yaml"/>
    <xacro:arg name="physical_params" default="$(find aegis_description)/config/ur5e/physical_parameters.yaml"/>
    <xacro:arg name="visual_params" default="$(find aegis_description)/config/ur5e/visual_parameters.yaml"/>

    <!-- ros2_control side safety -->
    <xacro:arg name="safety_limits" default="true"/>
    <xacro:arg name="safety_pos_margin" default="0.15"/>
    <xacro:arg name="safety_k_position" default="20"/>

    <!-- ros2_control related parameters -->
    <xacro:arg name="robot_ip" default="aegis_ur"/>
    <xacro:arg name="output_recipe_filename" default="$(find ur_robot_driver)/resources/rtde_output_recipe.txt"/>
    <xacro:arg name="input_recipe_filename" default="$(find ur_robot_driver)/resources/rtde_input_recipe.txt"/>
    <xacro:arg name="reverse_ip" default="0.0.0.0"/>

    <!--   tool communication related parameters-->
    <xacro:arg name="use_tool_communication" default="false"/>
    <xacro:arg name="tool_voltage" default="0"/>
    <xacro:arg name="tool_device_name" default="/tmp/ttyUR"/>

    <!-- Simulation parameters -->
    <xacro:arg name="use_fake_hardware" default="${str(mock_hardware)}"/>
    <xacro:arg name="fake_sensor_commands" default="${str(mock_hardware)}"/>
    <xacro:arg name="sim_gazebo" default="false"/>
    <xacro:arg name="sim_ignition" default="false"/>
    <xacro:arg name="simulation_controllers" default=""/>

    <!-- initial position for simulations (Fake Hardware, Gazebo, Ignition) -->
    <xacro:arg name="initial_positions_file" default="$(find aegis_control)/config/initial_positions.yaml"/>
    <xacro:arg name="kinematics_calibration" default="$(find aegis_description)/config/ur5e/calibration.yaml"/>

    <!-- convert to property to use substitution in function -->
    <xacro:property name="initial_positions_file" default="$(arg initial_positions_file)"/>

    <!-- arm -->
    <xacro:ur_robot
      name="${name}"
      tf_prefix="$(arg tf_prefix)"
      parent="${parent}"
      joint_limits_parameters_file="$(arg joint_limit_params)"
      kinematics_parameters_file="$(arg kinematics_calibration)"
      physical_parameters_file="$(arg physical_params)"
      visual_parameters_file="$(arg visual_params)"
      safety_limits="$(arg safety_limits)"
      safety_pos_margin="$(arg safety_pos_margin)"
      safety_k_position="$(arg safety_k_position)"
      use_fake_hardware="$(arg use_fake_hardware)"
      fake_sensor_commands="$(arg fake_sensor_commands)"
      sim_gazebo="$(arg sim_gazebo)"
      sim_ignition="$(arg sim_ignition)"
      initial_positions="${xacro.load_yaml(initial_positions_file)}"
      use_tool_communication="$(arg use_tool_communication)"
      tool_voltage="$(arg tool_voltage)"
      tool_device_name="$(arg tool_device_name)"
      robot_ip="$(arg robot_ip)"
      output_recipe_filename="$(arg output_recipe_filename)"
      input_recipe_filename="$(arg input_recipe_filename)"
      reverse_ip="$(arg reverse_ip)"
    >
      <!-- position robot in the world -->
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </xacro:ur_robot>

    <xacro:if value="$(arg sim_gazebo)">
      <!-- Gazebo plugins -->
      <gazebo reference="${parent}"/>
      <gazebo>
        <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
          <parameters>$(arg simulation_controllers)</parameters>
        </plugin>
      </gazebo>
    </xacro:if>

    <xacro:if value="$(arg sim_ignition)">
      <!-- Gazebo plugins -->
      <gazebo reference="${parent}"/>
      <gazebo>
        <plugin filename="libign_ros2_control-system.so" name="ign_ros2_control::IgnitionROS2ControlPlugin">
          <parameters>$(arg simulation_controllers)</parameters>
          <controller_manager_node_name>$(arg tf_prefix)controller_manager</controller_manager_node_name>
        </plugin>
      </gazebo>
    </xacro:if>
  </xacro:macro>
</robot>
